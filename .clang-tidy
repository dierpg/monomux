# Last checked against Clang-Tidy 16.0.2

# There **MUST** be an explicit newline between comments in the Checks: string
# and the actual contents that should be part of the string!

Checks: >-
  -*,
  clang-diagnostic-*,


  # --------------------------------------------------------------------------
  # If I want CSA, I'll run CSA with CodeChecker! ;)

  -clang-analyzer-*,


  # --------------------------------------------------------------------------
  # Toggle check groups on or off globally first.
  # Disabled ones are gneerally uninteresting because they target libraries or
  # ecosystems that are not relevant to this project.

  -abseil-*,
  -altera-*,
  -android-*,
  -boost-*,
  bugprone-*,
  cert-*,
  concurrency-*,
  cppcoreguidelines-*,
  -darwin-*,
  -fuchsia-*,
  -google-*,
  -hicpp-*,
  -linuxkernel-*,
  -llvm-*,
  -llvmlibc-*,
  misc-*,
  modernize-*,
  -mpi-*,
  -objc-*,
  -openmp-*,
  performance-*,
  portability-*,
  readability-*,
  -zircon-*,


  # --------------------------------------------------------------------------
  # Specific checks to be enabled from groups that were otherwise disabled.

  fuchsia-multiple-iheritance,
  fuchsia-statically-constructed-objects,
  fuchsia-trailing-return,
  google-build-namespaces,
  google-default-arguments,
  google-global-names-in-headers,
  google-explicit-constructor,
  google-readability-avoid-underscore-in-googletest-name,
  google-readability-casting,
  google-runtime-operator,
  google-upgrade-googletest-case,
  hicpp-exception-baseclass,
  hicpp-signed-bitwise,
  llvm-header-guard,
  llvm-include-order,
  llvm-namespace-comment,


  # --------------------------------------------------------------------------
  # Disabled: too many warnings that are not meaningfully silenceable locally,
  # or simply checks that are not in line with the project's style.

  -bugprone-macro-parentheses,
  -bugprone-narrowing-conversions,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-do-while,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -misc-non-private-member-variables-in-classes,
  -misc-unused-parameters,
  -modernize-avoid-c-arrays,
  -modernize-use-trailing-return-type,
  -readability-braces-around-statements,
  -readability-function-cognitive-complexity,
  -readability-implicit-bool-conversion,
  -readability-identifier-length,


  # --------------------------------------------------------------------------
  # Broken (see http://github.com/llvm/llvm-project/issues?q=is%3Aissue+is%3Aopen+bugprone-unchecked-optional-access)

  -bugprone-unchecked-optional-access,


  # --------------------------------------------------------------------------
  # Deprecated checks that trigger on the current project but will be removed
  # in a future version of Clang-Tidy.

  -cert-dcl21-cpp,


CheckOptions:
  - key:             bugprone-easily-swappable-parameters.QualifiersMix
    value:           true
  - key:             bugprone-easily-swappable-parameters.ModelImplicitConversions
    value:           true
  - key:             performance-move-const-arg.CheckTriviallyCopyableMove
    value:           false
  - key:             readability-identifier-naming.ClassCase
    value:           lower_case
  - key:             readability-identifier-naming.EnumCase
    value:           lower_case
  - key:             readability-identifier-naming.EnumConstantCase
    value:           CamelCase
  - key:             readability-identifier-naming.FunctionCase
    value:           lower_case
  - key:             readability-identifier-naming.MemberCase
    value:           CamelCase
  - key:             readability-identifier-naming.ParameterCase
    value:           CamelCase
  - key:             readability-identifier-naming.UnionCase
    value:           lower_case
  - key:             readability-identifier-naming.TemplateParameterCase
    value:           CamelCase
  - key:             readability-identifier-naming.TypedefCase
    value:           lower_case
  - key:             readability-identifier-naming.VariableCase
    value:           CamelCase
